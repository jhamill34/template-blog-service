# For local development:
# uncomment the block of code under the 
# micro service that you're making changes to. 
# This image comes from running 
#   docker build . -f build/air/Dockerfile -t localdev:latest
#
# Air will be ran in a container and will reload when changes are made
# (Note: This works best when developing one microservice at a time...)


version: '3.7'

services: 
  auth_service:
    image: auth_service:latest
    # image: localdev:latest
    # command: ["auth"]
    # volumes: 
    #   - ../:/app
    environment:
      BASE_URL: "https://auth.${ROOT_DOMAIN}"
      CONFIG_FILE: /auth_config
      RBAC_MODEL_FILE: /rbac_model_config
      APP_SERVER_BASE_URL: "https://blog.${ROOT_DOMAIN}"
      CACHE_ADDRESS: cache_store:6379
      CACHE_PASSWORD: /run/secrets/cache_password
      PUBSUB_ADDRESS: cache_store:6379
      PUBSUB_PASSWORD: /run/secrets/cache_password
      DB_USER: auth_user
      DB_PASSWORD: /run/secrets/db_auth_password
      DB_HOST: database_store
      DB_NAME: datadb
      DEFAULT_USER_EMAIL: "admin@${ROOT_DOMAIN}"
      DEFAULT_USER_PASSWORD: ${AUTH_DEFAULT_PASSWORD}
      DEFAULT_APP_CLIENT_ID: /run/secrets/oauth_client_id
      DEFAULT_APP_CLIENT_SECRET: /run/secrets/oauth_client_secret
      PASSWORD_SECRET: /run/secrets/auth_token_secret
      SESSION_SECRET: /run/secrets/auth_session_secret
      EMAIL_USER: admin
      EMAIL_DOMAIN: ${ROOT_DOMAIN}
      SMTP_DOMAIN: ${SMTP_DOMAIN}
      SMTP_CREDENTIALS_FILE: /run/secrets/email_credentials
      ACCESS_TOKEN_PUBLIC_KEY: /run/secrets/access_token_public_key
      ACCESS_TOKEN_PRIVATE_KEY: /run/secrets/access_token_private_key
    secrets: 
      - db_auth_password
      - cache_password
      - oauth_client_id
      - oauth_client_secret
      - auth_token_secret
      - auth_session_secret
      - access_token_public_key
      - access_token_private_key
      - email_credentials
    configs:
      - auth_config
      - rbac_model_config
    networks:
      - main
  

  app_service:
    image: app_service:latest
    # image: localdev:latest
    # command: ["app"]
    # volumes: 
    #   - ../:/app
    environment:
      BASE_URL: "https://api.${ROOT_DOMAIN}"
      CONFIG_FILE: /app_config
      RBAC_MODEL_FILE: /rbac_model_config
      CACHE_ADDRESS: cache_store:6379
      CACHE_PASSWORD: /run/secrets/cache_password
      PUBSUB_ADDRESS: cache_store:6379
      PUBSUB_PASSWORD: /run/secrets/cache_password
      DB_USER: app_user
      DB_PASSWORD: /run/secrets/db_app_password
      DB_HOST: database_store
      DB_NAME: datadb
      INTERNAL_AUTH_SERVER_BASE_URL: http://auth_service
    secrets:
      - cache_password
      - db_app_password
    configs:
      - app_config
      - rbac_model_config
    networks:
      - main

  gateway_service:
    image: gateway_service:latest
    # image: localdev:latest
    # command: ["gateway"]
    # volumes: 
    #   - ../:/app
    environment:
      BASE_URL: "https://blog.${ROOT_DOMAIN}"
      CONFIG_FILE: /gateway_config
      AUTH_SERVER_BASE_URL: "https://auth.${ROOT_DOMAIN}"
      INTERNAL_AUTH_SERVER_DOMAIN: auth_service
      INTERNAL_APP_SERVER_DOMAIN: app_service
      CACHE_ADDRESS: cache_store:6379
      CACHE_PASSWORD: /run/secrets/cache_password
      SESSION_SECRET: /run/secrets/app_session_secret
      OAUTH_CLIENT_ID: /run/secrets/oauth_client_id
      OAUTH_CLIENT_SECRET: /run/secrets/oauth_client_secret
    secrets:
      - cache_password
      - app_session_secret
      - oauth_client_id
      - oauth_client_secret
    configs:
      - gateway_config
    networks:
      - main

  email_service:
    image: mailer:latest
    # image: localdev:latest
    # command: ["mail"]
    # volumes: 
    #   - ../:/app
    environment:
      EMAIL_DOMAIN: ${ROOT_DOMAIN}
      CONFIG_FILE: /mail_config
      DKIM_PRIVATE_KEY: /run/secrets/dkim_private_key
      TLS_CERTIFICATE_PATH: /run/secrets/mail_ssl_cert
      TLS_KEY_PATH: /run/secrets/mail_ssl_key
      CREDENTIALS_FILE: /run/secrets/email_credentials
    secrets:
      - dkim_private_key
      - mail_ssl_cert
      - mail_ssl_key
      - email_credentials
    configs:
      - mail_config
    networks:
      - main

  cache_store:
    image: cache:latest
    environment:
      CACHE_PASSWORD: /run/secrets/cache_password
    secrets:
      - cache_password
    networks:
      - main
    volumes:
      - cache_data:/data

  database_store:
    image: database:latest
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: datadb
      DB_AUTH_USER: auth_user
      DB_AUTH_PASSWORD_FILE: /run/secrets/db_auth_password
      DB_APP_USER: app_user
      DB_APP_PASSWORD_FILE: /run/secrets/db_app_password
      DB_MIGRATOR_USER: migrator_user
      DB_MIGRATOR_PASSWORD_FILE: /run/secrets/db_migrator_password
    secrets:
      - source: db_root_password
        target: db_root_password
        mode: 0644
      - source: db_app_password
        target: db_app_password
        mode: 0644
      - source: db_auth_password
        target: db_auth_password
        mode: 0644
      - source: db_migrator_password
        target: db_migrator_password
        mode: 0644
    networks:
      - main
    volumes:
      - database_data:/var/lib/mysql

  migration_service:
    image: migrator:latest
    environment:
      CONFIG_FILE: /migrator_config
      DB_USER: migrator_user
      DB_PASSWORD: /run/secrets/db_migrator_password
      DB_HOST: database_store
      DB_NAME: datadb
    volumes: 
      - ../migrations:/app/migrations
    networks:
      - main
    secrets:
      - db_migrator_password
    configs:
      - migrator_config  

  proxy:
    image: proxy:latest
    ports:
      - "443:443"
    networks:
      - main
    environment:
      ROOT_DOMAIN: ${ROOT_DOMAIN}
      INTERNAL_AUTH_SERVER_DOMAIN: auth_service
      INTERNAL_APP_SERVER_DOMAIN: app_service
      INTERNAL_GATEWAY_SERVER_DOMAIN: gateway_service
      SSL_PUBLIC_KEY: /run/secrets/ssl_public_key
      SSL_PRIVATE_KEY: /run/secrets/ssl_private_key
    secrets:
      - ssl_public_key
      - ssl_private_key

volumes:
  database_data:
  cache_data:

networks:
  main:
    driver: bridge 

configs:
  auth_config:
    file: ../configs/auth.yaml
  app_config:
    file: ../configs/app.yaml
  gateway_config:
    file: ../configs/gateway.yaml
  mail_config:
    file: ../configs/mail.yaml
  migrator_config:
    file: ../configs/migrator.yaml
  rbac_model_config:
    file: ../configs/rbac_model.conf

secrets:
  # Place values for these in an environment file and 
  # provide that file in the compose up execution
  db_root_password:
    environment: "DB_ROOT_PASSWORD"
  db_auth_password:
    environment: "DB_AUTH_PASSWORD"
  db_app_password:
    environment: "DB_APP_PASSWORD"
  db_migrator_password:
    environment: "DB_MIGRATOR_PASSWORD"
  cache_password:
    environment: "CACHE_PASSWORD"
  oauth_client_id:
    environment: "DEFAULT_OAUTH_CLIENT_ID"
  oauth_client_secret:
    environment: "DEFAULT_OAUTH_CLIENT_SECRET"
  auth_token_secret:
    environment: "AUTH_TOKEN_SECRET"
  auth_session_secret:
    environment: "AUTH_SESSION_SECRET"
  app_session_secret:
    environment: "APP_SESSION_SECRET"
  email_credentials:
    environment: "EMAIL_CREDENTIALS"

  # Use the script in ./deployment/generate_key_pair.sh token
  # To create thse, openssl can also be used since its generic rsa keypairs
  access_token_public_key:
    file: ../secrets/token.pem
  access_token_private_key:
    file: ../secrets/token-key.pem

  # Use the script in ./deployment/generate_key_pair.sh dkim
  # to create this file, the DNS record will also generate
  dkim_private_key:
    file: ../secrets/dkim-key.pem

  # Use the script in ./deployment/generate_ssl_cert.sh 
  # to create these
  ssl_public_key:
    file: ../secrets/sslcert.pem
  ssl_private_key:
    file: ../secrets/sslkey.pem

  # Use mkcert or openssl to create these files
  mail_ssl_cert:
    file: ../secrets/mailcert.pem
  mail_ssl_key: 
    file: ../secrets/mailcert-key.pem

