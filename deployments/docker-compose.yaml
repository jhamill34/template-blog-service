version: '3.7'

services: 
  auth_service:
    image: ${REGISTRY_ENDPOINT}/${STACK_NAME}/auth_service:latest
    environment:
      BASE_URL: "https://auth.${ROOT_DOMAIN}"
      CONFIG_FILE: /auth_config
      RBAC_MODEL_FILE: /rbac_model_config
      APP_SERVER_BASE_URL: "https://blog.${ROOT_DOMAIN}"
      CACHE_ADDRESS: cache_store:6379
      CACHE_PASSWORD: /run/secrets/cache_password
      PUBSUB_ADDRESS: cache_store:6379
      PUBSUB_PASSWORD: /run/secrets/cache_password
      DB_USER: auth_user
      DB_PASSWORD: /run/secrets/db_auth_password
      DB_HOST: database_store
      DB_NAME: datadb
      DEFAULT_USER_EMAIL: "admin@${ROOT_DOMAIN}"
      DEFAULT_USER_PASSWORD: ${AUTH_DEFAULT_PASSWORD}
      DEFAULT_APP_CLIENT_ID: /run/secrets/oauth_client_id
      DEFAULT_APP_CLIENT_SECRET: /run/secrets/oauth_client_secret
      PASSWORD_SECRET: /run/secrets/auth_token_secret
      SESSION_SECRET: /run/secrets/auth_session_secret
      EMAIL_USER: admin
      EMAIL_DOMAIN: ${ROOT_DOMAIN}
      SMTP_DOMAIN: ${SMTP_DOMAIN}
      SMTP_CREDENTIALS_FILE: /run/secrets/email_credentials
      ACCESS_TOKEN_PUBLIC_KEY: /run/secrets/access_token_public_key
      ACCESS_TOKEN_PRIVATE_KEY: /run/secrets/access_token_private_key
    secrets: 
      - db_auth_password
      - cache_password
      - oauth_client_id
      - oauth_client_secret
      - auth_token_secret
      - auth_session_secret
      - access_token_public_key
      - access_token_private_key
      - email_credentials
    configs:
      - auth_config
      - rbac_model_config
    networks:
      - main
    deploy:
      endpoint_mode: vip
      replicas: 1
      mode: replicated
      resources:
        reservations:
          cpus: '0.25'
          memory: 25M
        # limits: {}
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: /aws/docker/${STACK_NAME}/auth_service
        awslogs-create-group: true

  

  app_service:
    image: ${REGISTRY_ENDPOINT}/${STACK_NAME}/app_service:latest
    environment:
      BASE_URL: "https://api.${ROOT_DOMAIN}"
      CONFIG_FILE: /app_config
      RBAC_MODEL_FILE: /rbac_model_config
      CACHE_ADDRESS: cache_store:6379
      CACHE_PASSWORD: /run/secrets/cache_password
      PUBSUB_ADDRESS: cache_store:6379
      PUBSUB_PASSWORD: /run/secrets/cache_password
      DB_USER: app_user
      DB_PASSWORD: /run/secrets/db_app_password
      DB_HOST: database_store
      DB_NAME: datadb
      INTERNAL_AUTH_SERVER_BASE_URL: http://auth_service
    secrets:
      - cache_password
      - db_app_password
    configs:
      - app_config
      - rbac_model_config
    networks:
      - main
    deploy:
      endpoint_mode: vip
      replicas: 1
      mode: replicated
      resources:
        reservations:
          cpus: '0.25'
          memory: 25M
        # limits: {}
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: /aws/docker/${STACK_NAME}/app_service
        awslogs-create-group: true


  gateway_service:
    image: ${REGISTRY_ENDPOINT}/${STACK_NAME}/gateway_service:latest
    environment:
      BASE_URL: "https://blog.${ROOT_DOMAIN}"
      CONFIG_FILE: /gateway_config
      AUTH_SERVER_BASE_URL: "https://auth.${ROOT_DOMAIN}"
      INTERNAL_AUTH_SERVER_DOMAIN: auth_service
      INTERNAL_APP_SERVER_DOMAIN: app_service
      CACHE_ADDRESS: cache_store:6379
      CACHE_PASSWORD: /run/secrets/cache_password
      SESSION_SECRET: /run/secrets/app_session_secret
      OAUTH_CLIENT_ID: /run/secrets/oauth_client_id
      OAUTH_CLIENT_SECRET: /run/secrets/oauth_client_secret
    secrets:
      - cache_password
      - app_session_secret
      - oauth_client_id
      - oauth_client_secret
    configs:
      - gateway_config
    networks:
      - main
    deploy:
      endpoint_mode: vip
      replicas: 1
      mode: replicated
      resources:
        reservations:
          cpus: '0.25'
          memory: 25M
        # limits: {}
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: /aws/docker/${STACK_NAME}/gateway_service
        awslogs-create-group: true


  email_service:
    image: ${REGISTRY_ENDPOINT}/${STACK_NAME}/mailer:latest
    environment:
      EMAIL_DOMAIN: ${ROOT_DOMAIN}
      CONFIG_FILE: /mail_config
      DKIM_PRIVATE_KEY: /run/secrets/dkim_private_key
      TLS_CERTIFICATE_PATH: /run/secrets/mail_ssl_cert
      TLS_KEY_PATH: /run/secrets/mail_ssl_key
      CREDENTIALS_FILE: /run/secrets/email_credentials
    secrets:
      - dkim_private_key
      - mail_ssl_cert
      - mail_ssl_key
      - email_credentials
    configs:
      - mail_config
    networks:
      - main
    deploy:
      endpoint_mode: vip
      replicas: 1
      mode: replicated
      resources:
        reservations:
          cpus: '0.25'
          memory: 25M
        # limits: {}
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
  

  cache_store:
    image: ${REGISTRY_ENDPOINT}/${STACK_NAME}/cache:latest
    environment:
      CACHE_PASSWORD: /run/secrets/cache_password
    secrets:
      - cache_password
    networks:
      - main
    volumes:
      - cache_data:/data
    deploy:
      endpoint_mode: vip
      replicas: 1
      mode: replicated
      resources:
        reservations:
          cpus: '0.25'
          memory: 25M
        # limits: {}
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
      placement:
        constraints:
          - node.labels.cache == true
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: /aws/docker/${STACK_NAME}/cache_store
        awslogs-create-group: true


  database_store:
    image: ${REGISTRY_ENDPOINT}/${STACK_NAME}/database:latest
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: datadb
      DB_AUTH_USER: auth_user
      DB_AUTH_PASSWORD_FILE: /run/secrets/db_auth_password
      DB_APP_USER: app_user
      DB_APP_PASSWORD_FILE: /run/secrets/db_app_password
      DB_MIGRATOR_USER: migrator_user
      DB_MIGRATOR_PASSWORD_FILE: /run/secrets/db_migrator_password
    secrets:
      - db_root_password
      - db_app_password
      - db_auth_password
      - db_migrator_password
    networks:
      - main
    volumes:
      - database_data:/var/lib/mysql
    deploy:
      endpoint_mode: vip
      replicas: 1
      mode: replicated
      resources:
        reservations:
          cpus: '0.25'
          memory: 25M
        # limits: {}
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
      placement:
        constraints:
          - node.labels.database == true
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: /aws/docker/${STACK_NAME}/database_store
        awslogs-create-group: true


  migration_service:
    image: ${REGISTRY_ENDPOINT}/${STACK_NAME}/migrator:latest
    environment:
      CONFIG_FILE: /migrator_config
      DB_USER: migrator_user
      DB_PASSWORD: /run/secrets/db_migrator_password
      DB_HOST: database_store
      DB_NAME: datadb
    networks:
      - main
    secrets:
      - db_migrator_password
    configs:
      - migrator_config
    deploy:
      restart_policy:
        condition: none
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: /aws/docker/${STACK_NAME}/migration_service
        awslogs-create-group: true

  

  proxy:
    image: ${REGISTRY_ENDPOINT}/${STACK_NAME}/proxy:latest
    ports:
      - "443:443"
    networks:
      - main
    environment:
      ROOT_DOMAIN: ${ROOT_DOMAIN}
      INTERNAL_AUTH_SERVER_DOMAIN: auth_service
      INTERNAL_APP_SERVER_DOMAIN: app_service
      INTERNAL_GATEWAY_SERVER_DOMAIN: gateway_service
      SSL_PUBLIC_KEY: /run/secrets/ssl_public_key
      SSL_PRIVATE_KEY: /run/secrets/ssl_private_key
    secrets:
      - ssl_public_key
      - ssl_private_key
    deploy:
      endpoint_mode: vip
      replicas: 1
      mode: replicated
      resources:
        reservations:
          cpus: '0.25'
          memory: 25M
        # limits: {}
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 10
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: /aws/docker/${STACK_NAME}/proxy
        awslogs-create-group: true


volumes:
  database_data:
  cache_data:

networks:
  main:
    driver: overlay

configs:
  auth_config:
    external: true
  app_config:
    external: true
  gateway_config:
    external: true
  mail_config:
    external: true
  migrator_config:
    external: true
  rbac_model_config:
    external: true

secrets:
  db_root_password:
    external: true
  db_auth_password:
    external: true
  db_app_password:
    external: true
  db_migrator_password:
    external: true
  cache_password:
    external: true
  oauth_client_id:
    external: true
  oauth_client_secret:
    external: true
  auth_token_secret:
    external: true
  auth_session_secret:
    external: true
  app_session_secret:
    external: true
  access_token_public_key:
    external: true
  access_token_private_key:
    external: true
  dkim_private_key:
    external: true
  ssl_public_key:
    external: true
  ssl_private_key:
    external: true
  mail_ssl_cert:
    external: true
  mail_ssl_key: 
    external: true
  email_credentials:
    external: true

